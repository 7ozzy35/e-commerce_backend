{"ast":null,"code":"import { AbstractLogger } from \"./AbstractLogger\";\nimport { debug } from \"debug\";\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nexport class DebugLogger extends AbstractLogger {\n  constructor() {\n    super(...arguments);\n    /**\n     * Object with all debug logger.\n     */\n    this.logger = {\n      log: debug(\"typeorm:log\"),\n      info: debug(\"typeorm:info\"),\n      warn: debug(\"typeorm:warn\"),\n      error: debug(\"typeorm:error\"),\n      query: debug(\"typeorm:query:log\"),\n      \"query-error\": debug(\"typeorm:query:error\"),\n      \"query-slow\": debug(\"typeorm:query:slow\"),\n      \"schema-build\": debug(\"typeorm:schema\"),\n      migration: debug(\"typeorm:migration\")\n    };\n  }\n  /**\n   * Check is logging for level or message type is enabled.\n   */\n  isLogEnabledFor(type) {\n    switch (type) {\n      case \"query\":\n        return this.logger[\"query\"].enabled;\n      case \"query-error\":\n        return this.logger[\"query-error\"].enabled;\n      case \"query-slow\":\n        return true;\n      case \"schema\":\n      case \"schema-build\":\n        return this.logger[\"schema-build\"].enabled;\n      case \"migration\":\n        return this.logger[\"migration\"].enabled;\n      case \"log\":\n        return this.logger[\"log\"].enabled;\n      case \"info\":\n        return this.logger[\"info\"].enabled;\n      case \"warn\":\n        return this.logger[\"warn\"].enabled;\n      default:\n        return false;\n    }\n  }\n  /**\n   * Write log to specific output.\n   */\n  writeLog(level, logMessage, queryRunner) {\n    const messages = this.prepareLogMessages(logMessage, {\n      appendParameterAsComment: false\n    });\n    for (let message of messages) {\n      const messageTypeOrLevel = message.type ?? level;\n      if (messageTypeOrLevel in this.logger) {\n        if (message.prefix) {\n          this.logger[messageTypeOrLevel](message.prefix, message.message);\n        } else {\n          this.logger[messageTypeOrLevel](message.message);\n        }\n        if (message.parameters && message.parameters.length) {\n          this.logger[messageTypeOrLevel](\"parameters:\", message.parameters);\n        }\n      }\n    }\n  }\n}","map":{"version":3,"names":["AbstractLogger","debug","DebugLogger","constructor","logger","log","info","warn","error","query","migration","isLogEnabledFor","type","enabled","writeLog","level","logMessage","queryRunner","messages","prepareLogMessages","appendParameterAsComment","message","messageTypeOrLevel","prefix","parameters","length"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\logger\\DebugLogger.ts"],"sourcesContent":["import { AbstractLogger } from \"./AbstractLogger\"\nimport { debug, Debugger } from \"debug\"\nimport { LogLevel, LogMessage, LogMessageType } from \"./Logger\"\nimport { QueryRunner } from \"../query-runner/QueryRunner\"\n\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nexport class DebugLogger extends AbstractLogger {\n    /**\n     * Object with all debug logger.\n     */\n    private logger: Record<string, Debugger> = {\n        log: debug(\"typeorm:log\"),\n        info: debug(\"typeorm:info\"),\n        warn: debug(\"typeorm:warn\"),\n        error: debug(\"typeorm:error\"),\n        query: debug(\"typeorm:query:log\"),\n        \"query-error\": debug(\"typeorm:query:error\"),\n        \"query-slow\": debug(\"typeorm:query:slow\"),\n        \"schema-build\": debug(\"typeorm:schema\"),\n        migration: debug(\"typeorm:migration\"),\n    }\n\n    /**\n     * Check is logging for level or message type is enabled.\n     */\n    protected isLogEnabledFor(type?: LogLevel | LogMessageType) {\n        switch (type) {\n            case \"query\":\n                return this.logger[\"query\"].enabled\n\n            case \"query-error\":\n                return this.logger[\"query-error\"].enabled\n\n            case \"query-slow\":\n                return true\n\n            case \"schema\":\n            case \"schema-build\":\n                return this.logger[\"schema-build\"].enabled\n\n            case \"migration\":\n                return this.logger[\"migration\"].enabled\n\n            case \"log\":\n                return this.logger[\"log\"].enabled\n\n            case \"info\":\n                return this.logger[\"info\"].enabled\n\n            case \"warn\":\n                return this.logger[\"warn\"].enabled\n\n            default:\n                return false\n        }\n    }\n\n    /**\n     * Write log to specific output.\n     */\n    protected writeLog(\n        level: LogLevel,\n        logMessage: LogMessage | LogMessage[],\n        queryRunner?: QueryRunner,\n    ) {\n        const messages = this.prepareLogMessages(logMessage, {\n            appendParameterAsComment: false,\n        })\n\n        for (let message of messages) {\n            const messageTypeOrLevel = message.type ?? level\n\n            if (messageTypeOrLevel in this.logger) {\n                if (message.prefix) {\n                    this.logger[messageTypeOrLevel](\n                        message.prefix,\n                        message.message,\n                    )\n                } else {\n                    this.logger[messageTypeOrLevel](message.message)\n                }\n\n                if (message.parameters && message.parameters.length) {\n                    this.logger[messageTypeOrLevel](\n                        \"parameters:\",\n                        message.parameters,\n                    )\n                }\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,KAAK,QAAkB,OAAO;AAIvC;;;AAGA,OAAM,MAAOC,WAAY,SAAQF,cAAc;EAA/CG,YAAA;;IACI;;;IAGQ,KAAAC,MAAM,GAA6B;MACvCC,GAAG,EAAEJ,KAAK,CAAC,aAAa,CAAC;MACzBK,IAAI,EAAEL,KAAK,CAAC,cAAc,CAAC;MAC3BM,IAAI,EAAEN,KAAK,CAAC,cAAc,CAAC;MAC3BO,KAAK,EAAEP,KAAK,CAAC,eAAe,CAAC;MAC7BQ,KAAK,EAAER,KAAK,CAAC,mBAAmB,CAAC;MACjC,aAAa,EAAEA,KAAK,CAAC,qBAAqB,CAAC;MAC3C,YAAY,EAAEA,KAAK,CAAC,oBAAoB,CAAC;MACzC,cAAc,EAAEA,KAAK,CAAC,gBAAgB,CAAC;MACvCS,SAAS,EAAET,KAAK,CAAC,mBAAmB;KACvC;EAuEL;EArEI;;;EAGUU,eAAeA,CAACC,IAAgC;IACtD,QAAQA,IAAI;MACR,KAAK,OAAO;QACR,OAAO,IAAI,CAACR,MAAM,CAAC,OAAO,CAAC,CAACS,OAAO;MAEvC,KAAK,aAAa;QACd,OAAO,IAAI,CAACT,MAAM,CAAC,aAAa,CAAC,CAACS,OAAO;MAE7C,KAAK,YAAY;QACb,OAAO,IAAI;MAEf,KAAK,QAAQ;MACb,KAAK,cAAc;QACf,OAAO,IAAI,CAACT,MAAM,CAAC,cAAc,CAAC,CAACS,OAAO;MAE9C,KAAK,WAAW;QACZ,OAAO,IAAI,CAACT,MAAM,CAAC,WAAW,CAAC,CAACS,OAAO;MAE3C,KAAK,KAAK;QACN,OAAO,IAAI,CAACT,MAAM,CAAC,KAAK,CAAC,CAACS,OAAO;MAErC,KAAK,MAAM;QACP,OAAO,IAAI,CAACT,MAAM,CAAC,MAAM,CAAC,CAACS,OAAO;MAEtC,KAAK,MAAM;QACP,OAAO,IAAI,CAACT,MAAM,CAAC,MAAM,CAAC,CAACS,OAAO;MAEtC;QACI,OAAO,KAAK;IACpB;EACJ;EAEA;;;EAGUC,QAAQA,CACdC,KAAe,EACfC,UAAqC,EACrCC,WAAyB;IAEzB,MAAMC,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACH,UAAU,EAAE;MACjDI,wBAAwB,EAAE;KAC7B,CAAC;IAEF,KAAK,IAAIC,OAAO,IAAIH,QAAQ,EAAE;MAC1B,MAAMI,kBAAkB,GAAGD,OAAO,CAACT,IAAI,IAAIG,KAAK;MAEhD,IAAIO,kBAAkB,IAAI,IAAI,CAAClB,MAAM,EAAE;QACnC,IAAIiB,OAAO,CAACE,MAAM,EAAE;UAChB,IAAI,CAACnB,MAAM,CAACkB,kBAAkB,CAAC,CAC3BD,OAAO,CAACE,MAAM,EACdF,OAAO,CAACA,OAAO,CAClB;QACL,CAAC,MAAM;UACH,IAAI,CAACjB,MAAM,CAACkB,kBAAkB,CAAC,CAACD,OAAO,CAACA,OAAO,CAAC;QACpD;QAEA,IAAIA,OAAO,CAACG,UAAU,IAAIH,OAAO,CAACG,UAAU,CAACC,MAAM,EAAE;UACjD,IAAI,CAACrB,MAAM,CAACkB,kBAAkB,CAAC,CAC3B,aAAa,EACbD,OAAO,CAACG,UAAU,CACrB;QACL;MACJ;IACJ;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}