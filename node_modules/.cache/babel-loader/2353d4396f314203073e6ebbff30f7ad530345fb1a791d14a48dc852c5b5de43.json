{"ast":null,"code":"/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n *\n * @deprecated\n */\nconst defaultContainer = new class {\n  constructor() {\n    this.instances = [];\n  }\n  get(someClass) {\n    let instance = this.instances.find(i => i.type === someClass);\n    if (!instance) {\n      instance = {\n        type: someClass,\n        object: new someClass()\n      };\n      this.instances.push(instance);\n    }\n    return instance.object;\n  }\n}();\nlet userContainer;\nlet userContainerOptions;\n/**\n * Sets container to be used by this library.\n *\n * @deprecated\n */\nexport function useContainer(iocContainer, options) {\n  userContainer = iocContainer;\n  userContainerOptions = options;\n}\n/**\n * Gets the IOC container used by this library.\n *\n * @deprecated\n */\nexport function getFromContainer(someClass) {\n  if (userContainer) {\n    try {\n      const instance = userContainer.get(someClass);\n      if (instance) return instance;\n      if (!userContainerOptions || !userContainerOptions.fallback) return instance;\n    } catch (error) {\n      if (!userContainerOptions || !userContainerOptions.fallbackOnErrors) throw error;\n    }\n  }\n  return defaultContainer.get(someClass);\n}","map":{"version":3,"names":["defaultContainer","constructor","instances","get","someClass","instance","find","i","type","object","push","userContainer","userContainerOptions","useContainer","iocContainer","options","getFromContainer","fallback","error","fallbackOnErrors"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\container.ts"],"sourcesContent":["/**\n * Container options.\n *\n * @deprecated\n */\nexport interface UseContainerOptions {\n    /**\n     * If set to true, then default container will be used in the case if given container haven't returned anything.\n     */\n    fallback?: boolean\n\n    /**\n     * If set to true, then default container will be used in the case if given container thrown an exception.\n     */\n    fallbackOnErrors?: boolean\n}\n\n/**\n * @deprecated\n */\nexport type ContainedType<T> = { new (...args: any[]): T } | Function\n\n/**\n * @deprecated\n */\nexport interface ContainerInterface {\n    get<T>(someClass: ContainedType<T>): T\n}\n\n/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n *\n * @deprecated\n */\nconst defaultContainer: ContainerInterface = new (class\n    implements ContainerInterface\n{\n    private instances: { type: Function; object: any }[] = []\n\n    get<T>(someClass: ContainedType<T>): T {\n        let instance = this.instances.find((i) => i.type === someClass)\n        if (!instance) {\n            instance = {\n                type: someClass,\n                object: new (someClass as new () => T)(),\n            }\n            this.instances.push(instance)\n        }\n\n        return instance.object\n    }\n})()\n\nlet userContainer: ContainerInterface\nlet userContainerOptions: UseContainerOptions | undefined\n\n/**\n * Sets container to be used by this library.\n *\n * @deprecated\n */\nexport function useContainer(\n    iocContainer: ContainerInterface,\n    options?: UseContainerOptions,\n) {\n    userContainer = iocContainer\n    userContainerOptions = options\n}\n\n/**\n * Gets the IOC container used by this library.\n *\n * @deprecated\n */\nexport function getFromContainer<T>(someClass: ContainedType<T>): T {\n    if (userContainer) {\n        try {\n            const instance = userContainer.get(someClass)\n            if (instance) return instance\n\n            if (!userContainerOptions || !userContainerOptions.fallback)\n                return instance\n        } catch (error) {\n            if (!userContainerOptions || !userContainerOptions.fallbackOnErrors)\n                throw error\n        }\n    }\n    return defaultContainer.get<T>(someClass)\n}\n"],"mappings":"AA6BA;;;;;;AAMA,MAAMA,gBAAgB,GAAuB,IAAK;EAAAC,YAAA;IAGtC,KAAAC,SAAS,GAAsC,EAAE;EAc7D;EAZIC,GAAGA,CAAIC,SAA2B;IAC9B,IAAIC,QAAQ,GAAG,IAAI,CAACH,SAAS,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKJ,SAAS,CAAC;IAC/D,IAAI,CAACC,QAAQ,EAAE;MACXA,QAAQ,GAAG;QACPG,IAAI,EAAEJ,SAAS;QACfK,MAAM,EAAE,IAAKL,SAAyB;OACzC;MACD,IAAI,CAACF,SAAS,CAACQ,IAAI,CAACL,QAAQ,CAAC;IACjC;IAEA,OAAOA,QAAQ,CAACI,MAAM;EAC1B;CACH,CAAC,CAAE;AAEJ,IAAIE,aAAiC;AACrC,IAAIC,oBAAqD;AAEzD;;;;;AAKA,OAAM,SAAUC,YAAYA,CACxBC,YAAgC,EAChCC,OAA6B;EAE7BJ,aAAa,GAAGG,YAAY;EAC5BF,oBAAoB,GAAGG,OAAO;AAClC;AAEA;;;;;AAKA,OAAM,SAAUC,gBAAgBA,CAAIZ,SAA2B;EAC3D,IAAIO,aAAa,EAAE;IACf,IAAI;MACA,MAAMN,QAAQ,GAAGM,aAAa,CAACR,GAAG,CAACC,SAAS,CAAC;MAC7C,IAAIC,QAAQ,EAAE,OAAOA,QAAQ;MAE7B,IAAI,CAACO,oBAAoB,IAAI,CAACA,oBAAoB,CAACK,QAAQ,EACvD,OAAOZ,QAAQ;IACvB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZ,IAAI,CAACN,oBAAoB,IAAI,CAACA,oBAAoB,CAACO,gBAAgB,EAC/D,MAAMD,KAAK;IACnB;EACJ;EACA,OAAOlB,gBAAgB,CAACG,GAAG,CAAIC,SAAS,CAAC;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}