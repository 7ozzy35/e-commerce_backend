{"ast":null,"code":"/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nexport class BroadcasterResult {\n  constructor() {\n    /**\n     * Number of executed listeners and subscribers.\n     */\n    this.count = 0;\n    /**\n     * Promises returned by listeners and subscribers which needs to be awaited.\n     */\n    this.promises = [];\n  }\n  /**\n   * Wait for all promises to settle\n   */\n  async wait() {\n    if (this.promises.length > 0) {\n      await Promise.all(this.promises);\n    }\n    return this;\n  }\n}","map":{"version":3,"names":["BroadcasterResult","constructor","count","promises","wait","length","Promise","all"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\subscriber\\BroadcasterResult.ts"],"sourcesContent":["/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nexport class BroadcasterResult {\n    /**\n     * Number of executed listeners and subscribers.\n     */\n    count: number = 0\n\n    /**\n     * Promises returned by listeners and subscribers which needs to be awaited.\n     */\n    promises: Promise<any>[] = []\n\n    /**\n     * Wait for all promises to settle\n     */\n    async wait(): Promise<BroadcasterResult> {\n        if (this.promises.length > 0) {\n            await Promise.all(this.promises)\n        }\n\n        return this\n    }\n}\n"],"mappings":"AAAA;;;AAGA,OAAM,MAAOA,iBAAiB;EAA9BC,YAAA;IACI;;;IAGA,KAAAC,KAAK,GAAW,CAAC;IAEjB;;;IAGA,KAAAC,QAAQ,GAAmB,EAAE;EAYjC;EAVI;;;EAGA,MAAMC,IAAIA,CAAA;IACN,IAAI,IAAI,CAACD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;MAC1B,MAAMC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAAC;IACpC;IAEA,OAAO,IAAI;EACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}