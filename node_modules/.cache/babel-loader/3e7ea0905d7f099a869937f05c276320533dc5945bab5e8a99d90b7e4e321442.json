{"ast":null,"code":"import { AppDataSource } from '../data_source';\nimport { Product } from '../models/Product';\n\n// CREATE - Yeni ürün oluştur\nexport const createProduct = async (req, res) => {\n  try {\n    const {\n      name,\n      description,\n      price,\n      stock\n    } = req.body;\n    const product = new Product();\n    product.name = name;\n    product.description = description;\n    product.price = price;\n    product.inventory = stock;\n    const result = await AppDataSource.manager.save(product);\n    res.status(201).json({\n      success: true,\n      data: result\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün oluşturulurken hata oluştu'\n    });\n  }\n};\n\n// READ - Tüm ürünleri getir\nexport const getProducts = async (_req, res) => {\n  try {\n    const products = await AppDataSource.manager.find(Product);\n    res.json({\n      success: true,\n      data: products\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürünler listelenirken hata oluştu'\n    });\n  }\n};\n\n// READ - Tek ürün getir\nexport const getProductById = async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const product = await AppDataSource.manager.findOne(Product, {\n      where: {\n        id\n      }\n    });\n    if (!product) {\n      res.status(404).json({\n        success: false,\n        error: 'Ürün bulunamadı'\n      });\n      return;\n    }\n    res.json({\n      success: true,\n      data: product\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün getirilirken hata oluştu'\n    });\n  }\n};\n\n// UPDATE - Ürün güncelle\nexport const updateProduct = async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const {\n      name,\n      description,\n      price,\n      stock\n    } = req.body;\n    const product = await AppDataSource.manager.findOne(Product, {\n      where: {\n        id\n      }\n    });\n    if (!product) {\n      res.status(404).json({\n        success: false,\n        error: 'Güncellenecek ürün bulunamadı'\n      });\n      return;\n    }\n    product.name = name || product.name;\n    product.description = description || product.description;\n    product.price = price || product.price;\n    product.inventory = stock || product.inventory;\n    const result = await AppDataSource.manager.save(product);\n    res.json({\n      success: true,\n      data: result\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün güncellenirken hata oluştu'\n    });\n  }\n};\n\n// DELETE - Ürün sil\nexport const deleteProduct = async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const product = await AppDataSource.manager.findOne(Product, {\n      where: {\n        id\n      }\n    });\n    if (!product) {\n      res.status(404).json({\n        success: false,\n        error: 'Silinecek ürün bulunamadı'\n      });\n      return;\n    }\n    await AppDataSource.manager.remove(product);\n    res.json({\n      success: true,\n      message: 'Ürün başarıyla silindi'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün silinirken hata oluştu'\n    });\n  }\n};","map":{"version":3,"names":["AppDataSource","Product","createProduct","req","res","name","description","price","stock","body","product","inventory","result","manager","save","status","json","success","data","error","getProducts","_req","products","find","getProductById","id","parseInt","params","findOne","where","updateProduct","deleteProduct","remove","message"],"sources":["D:/Ronwell Task 1/src/controllers/productController.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport { AppDataSource } from '../data_source';\r\nimport { Product } from '../models/Product';\r\n\r\n// CREATE - Yeni ürün oluştur\r\nexport const createProduct = async (req: Request, res: Response) => {\r\n  try {\r\n    const { name, description, price, stock } = req.body;\r\n    const product = new Product();\r\n    product.name = name;\r\n    product.description = description;\r\n    product.price = price;\r\n    product.inventory = stock;\r\n\r\n    const result = await AppDataSource.manager.save(product);\r\n    res.status(201).json({ success: true, data: result });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, error: 'Ürün oluşturulurken hata oluştu' });\r\n  }\r\n};\r\n\r\n// READ - Tüm ürünleri getir\r\nexport const getProducts = async (_req: Request, res: Response) => {\r\n  try {\r\n    const products = await AppDataSource.manager.find(Product);\r\n    res.json({ success: true, data: products });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, error: 'Ürünler listelenirken hata oluştu' });\r\n  }\r\n};\r\n\r\n// READ - Tek ürün getir\r\nexport const getProductById = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = parseInt(req.params.id);\r\n    const product = await AppDataSource.manager.findOne(Product, { where: { id } });\r\n\r\n    if (!product) {\r\n      res.status(404).json({ success: false, error: 'Ürün bulunamadı' });\r\n      return;\r\n    }\r\n\r\n    res.json({ success: true, data: product });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, error: 'Ürün getirilirken hata oluştu' });\r\n  }\r\n};\r\n\r\n// UPDATE - Ürün güncelle\r\nexport const updateProduct = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = parseInt(req.params.id);\r\n    const { name, description, price, stock } = req.body;\r\n\r\n    const product = await AppDataSource.manager.findOne(Product, { where: { id } });\r\n\r\n    if (!product) {\r\n      res.status(404).json({ success: false, error: 'Güncellenecek ürün bulunamadı' });\r\n      return;\r\n    }\r\n\r\n    product.name = name || product.name;\r\n    product.description = description || product.description;\r\n    product.price = price || product.price;\r\n    product.inventory = stock || product.inventory;\r\n\r\n    const result = await AppDataSource.manager.save(product);\r\n    res.json({ success: true, data: result });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, error: 'Ürün güncellenirken hata oluştu' });\r\n  }\r\n};\r\n\r\n// DELETE - Ürün sil\r\nexport const deleteProduct = async (req: Request, res: Response) => {\r\n  try {\r\n    const id = parseInt(req.params.id);\r\n    const product = await AppDataSource.manager.findOne(Product, { where: { id } });\r\n\r\n    if (!product) {\r\n      res.status(404).json({ success: false, error: 'Silinecek ürün bulunamadı' });\r\n      return;\r\n    }\r\n\r\n    await AppDataSource.manager.remove(product);\r\n    res.json({ success: true, message: 'Ürün başarıyla silindi' });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, error: 'Ürün silinirken hata oluştu' });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}