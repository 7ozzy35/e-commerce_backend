{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nexport class OptimisticLockVersionMismatchError extends TypeORMError {\n  constructor(entity, expectedVersion, actualVersion) {\n    super(`The optimistic lock on entity ${entity} failed, version ${expectedVersion} was expected, but is actually ${actualVersion}.`);\n  }\n}","map":{"version":3,"names":["TypeORMError","OptimisticLockVersionMismatchError","constructor","entity","expectedVersion","actualVersion"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\error\\OptimisticLockVersionMismatchError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nexport class OptimisticLockVersionMismatchError extends TypeORMError {\n    constructor(\n        entity: string,\n        expectedVersion: number | Date,\n        actualVersion: number | Date,\n    ) {\n        super(\n            `The optimistic lock on entity ${entity} failed, version ${expectedVersion} was expected, but is actually ${actualVersion}.`,\n        )\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C;;;AAGA,OAAM,MAAOC,kCAAmC,SAAQD,YAAY;EAChEE,YACIC,MAAc,EACdC,eAA8B,EAC9BC,aAA4B;IAE5B,KAAK,CACD,iCAAiCF,MAAM,oBAAoBC,eAAe,kCAAkCC,aAAa,GAAG,CAC/H;EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}