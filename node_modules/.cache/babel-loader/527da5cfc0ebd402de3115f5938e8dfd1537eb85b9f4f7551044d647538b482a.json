{"ast":null,"code":"/**\n * Database's table check constraint stored in this class.\n */\nexport class TableCheck {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  constructor(options) {\n    this[\"@instanceof\"] = Symbol.for(\"TableCheck\");\n    /**\n     * Column that contains this constraint.\n     */\n    this.columnNames = [];\n    this.name = options.name;\n    this.columnNames = options.columnNames;\n    this.expression = options.expression;\n  }\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates a new copy of this constraint with exactly same properties.\n   */\n  clone() {\n    return new TableCheck({\n      name: this.name,\n      columnNames: this.columnNames ? [...this.columnNames] : [],\n      expression: this.expression\n    });\n  }\n  // -------------------------------------------------------------------------\n  // Static Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates checks from the check metadata object.\n   */\n  static create(checkMetadata) {\n    return new TableCheck({\n      name: checkMetadata.name,\n      expression: checkMetadata.expression\n    });\n  }\n}","map":{"version":3,"names":["TableCheck","constructor","options","Symbol","for","columnNames","name","expression","clone","create","checkMetadata"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\schema-builder\\table\\TableCheck.ts"],"sourcesContent":["import { TableCheckOptions } from \"../options/TableCheckOptions\"\nimport { CheckMetadata } from \"../../metadata/CheckMetadata\"\n\n/**\n * Database's table check constraint stored in this class.\n */\nexport class TableCheck {\n    readonly \"@instanceof\" = Symbol.for(\"TableCheck\")\n\n    // -------------------------------------------------------------------------\n    // Public Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Constraint name.\n     */\n    name?: string\n\n    /**\n     * Column that contains this constraint.\n     */\n    columnNames?: string[] = []\n\n    /**\n     * Check expression.\n     */\n    expression?: string\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(options: TableCheckOptions) {\n        this.name = options.name\n        this.columnNames = options.columnNames\n        this.expression = options.expression\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    clone(): TableCheck {\n        return new TableCheck(<TableCheckOptions>{\n            name: this.name,\n            columnNames: this.columnNames ? [...this.columnNames] : [],\n            expression: this.expression,\n        })\n    }\n\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates checks from the check metadata object.\n     */\n    static create(checkMetadata: CheckMetadata): TableCheck {\n        return new TableCheck(<TableCheckOptions>{\n            name: checkMetadata.name,\n            expression: checkMetadata.expression,\n        })\n    }\n}\n"],"mappings":"AAGA;;;AAGA,OAAM,MAAOA,UAAU;EAsBnB;EACA;EACA;EAEAC,YAAYC,OAA0B;IAzB7B,mBAAa,GAAGC,MAAM,CAACC,GAAG,CAAC,YAAY,CAAC;IAWjD;;;IAGA,KAAAC,WAAW,GAAc,EAAE;IAYvB,IAAI,CAACC,IAAI,GAAGJ,OAAO,CAACI,IAAI;IACxB,IAAI,CAACD,WAAW,GAAGH,OAAO,CAACG,WAAW;IACtC,IAAI,CAACE,UAAU,GAAGL,OAAO,CAACK,UAAU;EACxC;EAEA;EACA;EACA;EAEA;;;EAGAC,KAAKA,CAAA;IACD,OAAO,IAAIR,UAAU,CAAoB;MACrCM,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD,WAAW,EAAE,IAAI,CAACA,WAAW,GAAG,CAAC,GAAG,IAAI,CAACA,WAAW,CAAC,GAAG,EAAE;MAC1DE,UAAU,EAAE,IAAI,CAACA;KACpB,CAAC;EACN;EAEA;EACA;EACA;EAEA;;;EAGA,OAAOE,MAAMA,CAACC,aAA4B;IACtC,OAAO,IAAIV,UAAU,CAAoB;MACrCM,IAAI,EAAEI,aAAa,CAACJ,IAAI;MACxBC,UAAU,EAAEG,aAAa,CAACH;KAC7B,CAAC;EACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}