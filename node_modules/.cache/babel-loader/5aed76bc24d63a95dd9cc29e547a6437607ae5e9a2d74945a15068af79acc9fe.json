{"ast":null,"code":"export class InstanceChecker {\n  static isMssqlParameter(obj) {\n    return this.check(obj, \"MssqlParameter\");\n  }\n  static isEntityMetadata(obj) {\n    return this.check(obj, \"EntityMetadata\");\n  }\n  static isColumnMetadata(obj) {\n    return this.check(obj, \"ColumnMetadata\");\n  }\n  static isSelectQueryBuilder(obj) {\n    return this.check(obj, \"SelectQueryBuilder\");\n  }\n  static isInsertQueryBuilder(obj) {\n    return this.check(obj, \"InsertQueryBuilder\");\n  }\n  static isDeleteQueryBuilder(obj) {\n    return this.check(obj, \"DeleteQueryBuilder\");\n  }\n  static isUpdateQueryBuilder(obj) {\n    return this.check(obj, \"UpdateQueryBuilder\");\n  }\n  static isSoftDeleteQueryBuilder(obj) {\n    return this.check(obj, \"SoftDeleteQueryBuilder\");\n  }\n  static isRelationQueryBuilder(obj) {\n    return this.check(obj, \"RelationQueryBuilder\");\n  }\n  static isBrackets(obj) {\n    return this.check(obj, \"Brackets\") || this.check(obj, \"NotBrackets\");\n  }\n  static isNotBrackets(obj) {\n    return this.check(obj, \"NotBrackets\");\n  }\n  static isSubject(obj) {\n    return this.check(obj, \"Subject\");\n  }\n  static isRdbmsSchemaBuilder(obj) {\n    return this.check(obj, \"RdbmsSchemaBuilder\");\n  }\n  static isMongoEntityManager(obj) {\n    return this.check(obj, \"MongoEntityManager\");\n  }\n  static isSqljsEntityManager(obj) {\n    return this.check(obj, \"SqljsEntityManager\");\n  }\n  static isEntitySchema(obj) {\n    return this.check(obj, \"EntitySchema\");\n  }\n  static isBaseEntityConstructor(obj) {\n    return typeof obj === \"function\" && typeof obj.hasId === \"function\" && typeof obj.save === \"function\" && typeof obj.useDataSource === \"function\";\n  }\n  static isFindOperator(obj) {\n    return this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\");\n  }\n  static isEqualOperator(obj) {\n    return this.check(obj, \"EqualOperator\");\n  }\n  static isQuery(obj) {\n    return this.check(obj, \"Query\");\n  }\n  static isTable(obj) {\n    return this.check(obj, \"Table\");\n  }\n  static isTableCheck(obj) {\n    return this.check(obj, \"TableCheck\");\n  }\n  static isTableColumn(obj) {\n    return this.check(obj, \"TableColumn\");\n  }\n  static isTableExclusion(obj) {\n    return this.check(obj, \"TableExclusion\");\n  }\n  static isTableForeignKey(obj) {\n    return this.check(obj, \"TableForeignKey\");\n  }\n  static isTableIndex(obj) {\n    return this.check(obj, \"TableIndex\");\n  }\n  static isTableUnique(obj) {\n    return this.check(obj, \"TableUnique\");\n  }\n  static isView(obj) {\n    return this.check(obj, \"View\");\n  }\n  static isDataSource(obj) {\n    return this.check(obj, \"DataSource\");\n  }\n  static check(obj, name) {\n    return typeof obj === \"object\" && obj !== null && obj[\"@instanceof\"] === Symbol.for(name);\n  }\n}","map":{"version":3,"names":["InstanceChecker","isMssqlParameter","obj","check","isEntityMetadata","isColumnMetadata","isSelectQueryBuilder","isInsertQueryBuilder","isDeleteQueryBuilder","isUpdateQueryBuilder","isSoftDeleteQueryBuilder","isRelationQueryBuilder","isBrackets","isNotBrackets","isSubject","isRdbmsSchemaBuilder","isMongoEntityManager","isSqljsEntityManager","isEntitySchema","isBaseEntityConstructor","hasId","save","useDataSource","isFindOperator","isEqualOperator","isQuery","isTable","isTableCheck","isTableColumn","isTableExclusion","isTableForeignKey","isTableIndex","isTableUnique","isView","isDataSource","name","Symbol","for"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\util\\InstanceChecker.ts"],"sourcesContent":["import type { MongoEntityManager } from \"../entity-manager/MongoEntityManager\"\nimport type { SqljsEntityManager } from \"../entity-manager/SqljsEntityManager\"\nimport type { EntitySchema } from \"../entity-schema/EntitySchema\"\nimport type { FindOperator } from \"../find-options/FindOperator\"\nimport type { EqualOperator } from \"../find-options/EqualOperator\"\nimport type { Query } from \"../driver/Query\"\nimport type { RdbmsSchemaBuilder } from \"../schema-builder/RdbmsSchemaBuilder\"\nimport type { Subject } from \"../persistence/Subject\"\nimport type { SelectQueryBuilder } from \"../query-builder/SelectQueryBuilder\"\nimport type { UpdateQueryBuilder } from \"../query-builder/UpdateQueryBuilder\"\nimport type { DeleteQueryBuilder } from \"../query-builder/DeleteQueryBuilder\"\nimport type { SoftDeleteQueryBuilder } from \"../query-builder/SoftDeleteQueryBuilder\"\nimport type { InsertQueryBuilder } from \"../query-builder/InsertQueryBuilder\"\nimport type { RelationQueryBuilder } from \"../query-builder/RelationQueryBuilder\"\nimport type { Brackets } from \"../query-builder/Brackets\"\nimport type { Table } from \"../schema-builder/table/Table\"\nimport type { TableCheck } from \"../schema-builder/table/TableCheck\"\nimport type { TableColumn } from \"../schema-builder/table/TableColumn\"\nimport type { TableExclusion } from \"../schema-builder/table/TableExclusion\"\nimport type { TableForeignKey } from \"../schema-builder/table/TableForeignKey\"\nimport type { TableIndex } from \"../schema-builder/table/TableIndex\"\nimport type { TableUnique } from \"../schema-builder/table/TableUnique\"\nimport type { View } from \"../schema-builder/view/View\"\nimport type { NotBrackets } from \"../query-builder/NotBrackets\"\nimport type { EntityMetadata } from \"../metadata/EntityMetadata\"\nimport type { ColumnMetadata } from \"../metadata/ColumnMetadata\"\nimport type { MssqlParameter } from \"../driver/sqlserver/MssqlParameter\"\nimport { DataSource } from \"../data-source\"\nimport { BaseEntity } from \"../repository/BaseEntity\"\n\nexport class InstanceChecker {\n    static isMssqlParameter(obj: unknown): obj is MssqlParameter {\n        return this.check(obj, \"MssqlParameter\")\n    }\n    static isEntityMetadata(obj: unknown): obj is EntityMetadata {\n        return this.check(obj, \"EntityMetadata\")\n    }\n    static isColumnMetadata(obj: unknown): obj is ColumnMetadata {\n        return this.check(obj, \"ColumnMetadata\")\n    }\n    static isSelectQueryBuilder(obj: unknown): obj is SelectQueryBuilder<any> {\n        return this.check(obj, \"SelectQueryBuilder\")\n    }\n    static isInsertQueryBuilder(obj: unknown): obj is InsertQueryBuilder<any> {\n        return this.check(obj, \"InsertQueryBuilder\")\n    }\n    static isDeleteQueryBuilder(obj: unknown): obj is DeleteQueryBuilder<any> {\n        return this.check(obj, \"DeleteQueryBuilder\")\n    }\n    static isUpdateQueryBuilder(obj: unknown): obj is UpdateQueryBuilder<any> {\n        return this.check(obj, \"UpdateQueryBuilder\")\n    }\n    static isSoftDeleteQueryBuilder(\n        obj: unknown,\n    ): obj is SoftDeleteQueryBuilder<any> {\n        return this.check(obj, \"SoftDeleteQueryBuilder\")\n    }\n    static isRelationQueryBuilder(\n        obj: unknown,\n    ): obj is RelationQueryBuilder<any> {\n        return this.check(obj, \"RelationQueryBuilder\")\n    }\n    static isBrackets(obj: unknown): obj is Brackets {\n        return this.check(obj, \"Brackets\") || this.check(obj, \"NotBrackets\")\n    }\n    static isNotBrackets(obj: unknown): obj is NotBrackets {\n        return this.check(obj, \"NotBrackets\")\n    }\n    static isSubject(obj: unknown): obj is Subject {\n        return this.check(obj, \"Subject\")\n    }\n    static isRdbmsSchemaBuilder(obj: unknown): obj is RdbmsSchemaBuilder {\n        return this.check(obj, \"RdbmsSchemaBuilder\")\n    }\n    static isMongoEntityManager(obj: unknown): obj is MongoEntityManager {\n        return this.check(obj, \"MongoEntityManager\")\n    }\n    static isSqljsEntityManager(obj: unknown): obj is SqljsEntityManager {\n        return this.check(obj, \"SqljsEntityManager\")\n    }\n    static isEntitySchema(obj: unknown): obj is EntitySchema {\n        return this.check(obj, \"EntitySchema\")\n    }\n    static isBaseEntityConstructor(obj: unknown): obj is typeof BaseEntity {\n        return (\n            typeof obj === \"function\" &&\n            typeof (obj as typeof BaseEntity).hasId === \"function\" &&\n            typeof (obj as typeof BaseEntity).save === \"function\" &&\n            typeof (obj as typeof BaseEntity).useDataSource === \"function\"\n        )\n    }\n    static isFindOperator(obj: unknown): obj is FindOperator<any> {\n        return (\n            this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\")\n        )\n    }\n    static isEqualOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"EqualOperator\")\n    }\n    static isQuery(obj: unknown): obj is Query {\n        return this.check(obj, \"Query\")\n    }\n    static isTable(obj: unknown): obj is Table {\n        return this.check(obj, \"Table\")\n    }\n    static isTableCheck(obj: unknown): obj is TableCheck {\n        return this.check(obj, \"TableCheck\")\n    }\n    static isTableColumn(obj: unknown): obj is TableColumn {\n        return this.check(obj, \"TableColumn\")\n    }\n    static isTableExclusion(obj: unknown): obj is TableExclusion {\n        return this.check(obj, \"TableExclusion\")\n    }\n    static isTableForeignKey(obj: unknown): obj is TableForeignKey {\n        return this.check(obj, \"TableForeignKey\")\n    }\n    static isTableIndex(obj: unknown): obj is TableIndex {\n        return this.check(obj, \"TableIndex\")\n    }\n    static isTableUnique(obj: unknown): obj is TableUnique {\n        return this.check(obj, \"TableUnique\")\n    }\n    static isView(obj: unknown): obj is View {\n        return this.check(obj, \"View\")\n    }\n    static isDataSource(obj: unknown): obj is DataSource {\n        return this.check(obj, \"DataSource\")\n    }\n\n    private static check(obj: unknown, name: string) {\n        return (\n            typeof obj === \"object\" &&\n            obj !== null &&\n            (obj as { \"@instanceof\": Symbol })[\"@instanceof\"] ===\n                Symbol.for(name)\n        )\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}