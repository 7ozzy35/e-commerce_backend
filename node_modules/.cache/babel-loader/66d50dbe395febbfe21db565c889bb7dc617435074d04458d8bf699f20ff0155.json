{"ast":null,"code":"import express from 'express';\nimport { AppDataSource } from './data_source';\nimport { Product } from './entity/Product';\nimport cors from 'cors';\nimport path from 'path';\nconst app = express();\n\n// Middleware\napp.use(express.json());\napp.use(cors());\napp.use(express.static('public'));\n\n// Veritabanı bağlantısı\nAppDataSource.initialize().then(() => {\n  console.log('Veritabanına başarıyla bağlanıldı.');\n}).catch(error => console.log('Veritabanı bağlantı hatası:', error));\n\n// Ana sayfa\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, '../public/index.html'));\n});\n\n// API Routes\n// CREATE - Yeni ürün oluştur\napp.post('/api/product', async (req, res) => {\n  try {\n    const {\n      name,\n      description,\n      price,\n      stock\n    } = req.body;\n    const product = new Product();\n    product.name = name;\n    product.description = description;\n    product.price = price;\n    product.stock = stock;\n    const result = await AppDataSource.manager.save(product);\n    res.status(201).json({\n      success: true,\n      data: result\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün oluşturulurken hata oluştu'\n    });\n  }\n});\n\n// READ - Tüm ürünleri getir\napp.get('/api/products', async (req, res) => {\n  try {\n    const products = await AppDataSource.manager.find(Product);\n    res.json({\n      success: true,\n      data: products\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürünler listelenirken hata oluştu'\n    });\n  }\n});\n\n// READ - Tek ürün getir\napp.get('/api/products/:id', async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const product = await AppDataSource.manager.findOne(Product, {\n      where: {\n        id\n      }\n    });\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: 'Ürün bulunamadı'\n      });\n    }\n    res.json({\n      success: true,\n      data: product\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün getirilirken hata oluştu'\n    });\n  }\n});\n\n// UPDATE - Ürün güncelle\napp.put('/api/products/:id', async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const {\n      name,\n      description,\n      price,\n      stock\n    } = req.body;\n    const product = await AppDataSource.manager.findOne(Product, {\n      where: {\n        id\n      }\n    });\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: 'Güncellenecek ürün bulunamadı'\n      });\n    }\n    product.name = name || product.name;\n    product.description = description || product.description;\n    product.price = price || product.price;\n    product.stock = stock || product.stock;\n    const result = await AppDataSource.manager.save(product);\n    res.json({\n      success: true,\n      data: result\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün güncellenirken hata oluştu'\n    });\n  }\n});\n\n// DELETE - Ürün sil\napp.delete('/api/products/:id', async (req, res) => {\n  try {\n    const id = parseInt(req.params.id);\n    const product = await AppDataSource.manager.findOne(Product, {\n      where: {\n        id\n      }\n    });\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: 'Silinecek ürün bulunamadı'\n      });\n    }\n    await AppDataSource.manager.remove(product);\n    res.json({\n      success: true,\n      message: 'Ürün başarıyla silindi'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Ürün silinirken hata oluştu'\n    });\n  }\n});\n\n// Sunucuyu başlat\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Sunucu ${PORT} portunda çalışıyor`);\n  console.log(`http://localhost:${PORT} adresinden erişebilirsiniz`);\n});","map":{"version":3,"names":["express","AppDataSource","Product","cors","path","app","use","json","static","initialize","then","console","log","catch","error","get","req","res","sendFile","join","__dirname","post","name","description","price","stock","body","product","result","manager","save","status","success","data","products","find","id","parseInt","params","findOne","where","put","delete","remove","message","PORT","process","env","listen"],"sources":["D:/Ronwell Task 1/src/index.ts"],"sourcesContent":["import express, { Request, Response } from 'express';\r\nimport { AppDataSource } from './data_source';\r\nimport { Product } from './entity/Product';\r\nimport cors from 'cors';\r\nimport path from 'path';\r\n\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cors());\r\napp.use(express.static('public'));\r\n\r\n// Veritabanı bağlantısı\r\nAppDataSource.initialize()\r\n  .then(() => {\r\n    console.log('Veritabanına başarıyla bağlanıldı.');\r\n  })\r\n  .catch((error) => console.log('Veritabanı bağlantı hatası:', error));\r\n\r\n// Ana sayfa\r\napp.get('/', (req: Request, res: Response) => {\r\n  res.sendFile(path.join(__dirname, '../public/index.html'));\r\n});\r\n\r\n// API Routes\r\n// CREATE - Yeni ürün oluştur\r\napp.post('/api/product', async (req: Request, res: Response) => {\r\n  try {\r\n    const { name, description, price, stock } = req.body;\r\n    \r\n    const product = new Product();\r\n    product.name = name;\r\n    product.description = description;\r\n    product.price = price;\r\n    product.stock = stock;\r\n\r\n    const result = await AppDataSource.manager.save(product);\r\n    res.status(201).json({\r\n      success: true,\r\n      data: result\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      success: false,\r\n      error: 'Ürün oluşturulurken hata oluştu'\r\n    });\r\n  }\r\n});\r\n\r\n// READ - Tüm ürünleri getir\r\napp.get('/api/products', async (req: Request, res: Response) => {\r\n  try {\r\n    const products = await AppDataSource.manager.find(Product);\r\n    res.json({\r\n      success: true,\r\n      data: products\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      success: false,\r\n      error: 'Ürünler listelenirken hata oluştu'\r\n    });\r\n  }\r\n});\r\n\r\n// READ - Tek ürün getir\r\napp.get('/api/products/:id', async (req: Request, res: Response) => {\r\n  try {\r\n    const id = parseInt(req.params.id);\r\n    const product = await AppDataSource.manager.findOne(Product, {\r\n      where: { id }\r\n    });\r\n\r\n    if (!product) {\r\n      return res.status(404).json({\r\n        success: false,\r\n        error: 'Ürün bulunamadı'\r\n      });\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: product\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      success: false,\r\n      error: 'Ürün getirilirken hata oluştu'\r\n    });\r\n  }\r\n});\r\n\r\n// UPDATE - Ürün güncelle\r\napp.put('/api/products/:id', async (req: Request, res: Response) => {\r\n  try {\r\n    const id = parseInt(req.params.id);\r\n    const { name, description, price, stock } = req.body;\r\n\r\n    const product = await AppDataSource.manager.findOne(Product, {\r\n      where: { id }\r\n    });\r\n\r\n    if (!product) {\r\n      return res.status(404).json({\r\n        success: false,\r\n        error: 'Güncellenecek ürün bulunamadı'\r\n      });\r\n    }\r\n\r\n    product.name = name || product.name;\r\n    product.description = description || product.description;\r\n    product.price = price || product.price;\r\n    product.stock = stock || product.stock;\r\n\r\n    const result = await AppDataSource.manager.save(product);\r\n    res.json({\r\n      success: true,\r\n      data: result\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      success: false,\r\n      error: 'Ürün güncellenirken hata oluştu'\r\n    });\r\n  }\r\n});\r\n\r\n// DELETE - Ürün sil\r\napp.delete('/api/products/:id', async (req: Request, res: Response) => {\r\n  try {\r\n    const id = parseInt(req.params.id);\r\n    const product = await AppDataSource.manager.findOne(Product, {\r\n      where: { id }\r\n    });\r\n\r\n    if (!product) {\r\n      return res.status(404).json({\r\n        success: false,\r\n        error: 'Silinecek ürün bulunamadı'\r\n      });\r\n    }\r\n\r\n    await AppDataSource.manager.remove(product);\r\n    res.json({\r\n      success: true,\r\n      message: 'Ürün başarıyla silindi'\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      success: false,\r\n      error: 'Ürün silinirken hata oluştu'\r\n    });\r\n  }\r\n});\r\n\r\n// Sunucuyu başlat\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Sunucu ${PORT} portunda çalışıyor`);\r\n  console.log(`http://localhost:${PORT} adresinden erişebilirsiniz`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}