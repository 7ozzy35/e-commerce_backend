{"ast":null,"code":"/**\n * Exclusion metadata contains all information about table's exclusion constraints.\n */\nexport class ExclusionMetadata {\n  // ---------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------\n  constructor(options) {\n    this.entityMetadata = options.entityMetadata;\n    if (options.args) {\n      this.target = options.args.target;\n      this.expression = options.args.expression;\n      this.givenName = options.args.name;\n    }\n  }\n  // ---------------------------------------------------------------------\n  // Public Build Methods\n  // ---------------------------------------------------------------------\n  /**\n   * Builds some depend exclusion constraint properties.\n   * Must be called after all entity metadata's properties map, columns and relations are built.\n   */\n  build(namingStrategy) {\n    this.name = this.givenName ? this.givenName : namingStrategy.exclusionConstraintName(this.entityMetadata.tableName, this.expression);\n    return this;\n  }\n}","map":{"version":3,"names":["ExclusionMetadata","constructor","options","entityMetadata","args","target","expression","givenName","name","build","namingStrategy","exclusionConstraintName","tableName"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\metadata\\ExclusionMetadata.ts"],"sourcesContent":["import { EntityMetadata } from \"./EntityMetadata\"\nimport { NamingStrategyInterface } from \"../naming-strategy/NamingStrategyInterface\"\nimport { ExclusionMetadataArgs } from \"../metadata-args/ExclusionMetadataArgs\"\n\n/**\n * Exclusion metadata contains all information about table's exclusion constraints.\n */\nexport class ExclusionMetadata {\n    // ---------------------------------------------------------------------\n    // Public Properties\n    // ---------------------------------------------------------------------\n\n    /**\n     * Entity metadata of the class to which this exclusion constraint is applied.\n     */\n    entityMetadata: EntityMetadata\n\n    /**\n     * Target class to which metadata is applied.\n     */\n    target?: Function | string\n\n    /**\n     * Exclusion expression.\n     */\n    expression: string\n\n    /**\n     * User specified exclusion constraint name.\n     */\n    givenName?: string\n\n    /**\n     * Final exclusion constraint name.\n     * If exclusion constraint name was given by a user then it stores normalized (by naming strategy) givenName.\n     * If exclusion constraint name was not given then its generated.\n     */\n    name: string\n\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n\n    constructor(options: {\n        entityMetadata: EntityMetadata\n        args?: ExclusionMetadataArgs\n    }) {\n        this.entityMetadata = options.entityMetadata\n\n        if (options.args) {\n            this.target = options.args.target\n            this.expression = options.args.expression\n            this.givenName = options.args.name\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n\n    /**\n     * Builds some depend exclusion constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    build(namingStrategy: NamingStrategyInterface): this {\n        this.name = this.givenName\n            ? this.givenName\n            : namingStrategy.exclusionConstraintName(\n                  this.entityMetadata.tableName,\n                  this.expression,\n              )\n        return this\n    }\n}\n"],"mappings":"AAIA;;;AAGA,OAAM,MAAOA,iBAAiB;EAgC1B;EACA;EACA;EAEAC,YAAYC,OAGX;IACG,IAAI,CAACC,cAAc,GAAGD,OAAO,CAACC,cAAc;IAE5C,IAAID,OAAO,CAACE,IAAI,EAAE;MACd,IAAI,CAACC,MAAM,GAAGH,OAAO,CAACE,IAAI,CAACC,MAAM;MACjC,IAAI,CAACC,UAAU,GAAGJ,OAAO,CAACE,IAAI,CAACE,UAAU;MACzC,IAAI,CAACC,SAAS,GAAGL,OAAO,CAACE,IAAI,CAACI,IAAI;IACtC;EACJ;EAEA;EACA;EACA;EAEA;;;;EAIAC,KAAKA,CAACC,cAAuC;IACzC,IAAI,CAACF,IAAI,GAAG,IAAI,CAACD,SAAS,GACpB,IAAI,CAACA,SAAS,GACdG,cAAc,CAACC,uBAAuB,CAClC,IAAI,CAACR,cAAc,CAACS,SAAS,EAC7B,IAAI,CAACN,UAAU,CAClB;IACP,OAAO,IAAI;EACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}