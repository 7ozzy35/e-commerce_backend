{"ast":null,"code":"/**\n * Dummy functions for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n/**\n * Loads all exported classes from the given directory.\n */\nexport function importClassesFromDirectories(logger, directories, formats = [\".js\", \".cjs\", \".ts\"]) {\n  return [];\n}\n/**\n * Loads all json files from the given directory.\n */\nexport function importJsonsFromDirectories(directories, format = \".json\") {\n  return [];\n}","map":{"version":3,"names":["importClassesFromDirectories","logger","directories","formats","importJsonsFromDirectories","format"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\platform\\BrowserDirectoryExportedClassesLoader.ts"],"sourcesContent":["/**\n * Dummy functions for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n\nimport {Logger} from \"../logger/Logger\";\n\n/**\n * Loads all exported classes from the given directory.\n */\nexport function importClassesFromDirectories(logger: Logger, directories: string[], formats = [\".js\", \".cjs\", \".ts\"]): Function[] {\n    return [];\n}\n\n/**\n * Loads all json files from the given directory.\n */\nexport function importJsonsFromDirectories(directories: string[], format = \".json\"): any[] {\n    return [];\n}\n"],"mappings":"AAAA;;;;;;AASA;;;AAGA,OAAM,SAAUA,4BAA4BA,CAACC,MAAc,EAAEC,WAAqB,EAAEC,OAAO,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;EAChH,OAAO,EAAE;AACb;AAEA;;;AAGA,OAAM,SAAUC,0BAA0BA,CAACF,WAAqB,EAAEG,MAAM,GAAG,OAAO;EAC9E,OAAO,EAAE;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}