{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when the per-migration transaction mode is overriden but the global transaction mode is set to \"all\".\n */\nexport class ForbiddenTransactionModeOverrideError extends TypeORMError {\n  constructor(migrationsOverridingTransactionMode) {\n    const migrationNames = migrationsOverridingTransactionMode.map(migration => `\"${migration.name}\"`);\n    super(`Migrations ${migrationNames.join(\", \")} override the transaction mode, but the global transaction mode is \"all\"`);\n  }\n}","map":{"version":3,"names":["TypeORMError","ForbiddenTransactionModeOverrideError","constructor","migrationsOverridingTransactionMode","migrationNames","map","migration","name","join"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\error\\ForbiddenTransactionModeOverrideError.ts"],"sourcesContent":["import { Migration } from \"../migration/Migration\"\nimport { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when the per-migration transaction mode is overriden but the global transaction mode is set to \"all\".\n */\nexport class ForbiddenTransactionModeOverrideError extends TypeORMError {\n    constructor(migrationsOverridingTransactionMode: Migration[]) {\n        const migrationNames = migrationsOverridingTransactionMode.map(\n            (migration) => `\"${migration.name}\"`,\n        )\n\n        super(\n            `Migrations ${migrationNames.join(\n                \", \",\n            )} override the transaction mode, but the global transaction mode is \"all\"`,\n        )\n    }\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C;;;AAGA,OAAM,MAAOC,qCAAsC,SAAQD,YAAY;EACnEE,YAAYC,mCAAgD;IACxD,MAAMC,cAAc,GAAGD,mCAAmC,CAACE,GAAG,CACzDC,SAAS,IAAK,IAAIA,SAAS,CAACC,IAAI,GAAG,CACvC;IAED,KAAK,CACD,cAAcH,cAAc,CAACI,IAAI,CAC7B,IAAI,CACP,0EAA0E,CAC9E;EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}