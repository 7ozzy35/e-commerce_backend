{"ast":null,"code":"import express from 'express';\nimport { AppDataSource } from './data_source';\nimport { Product } from './entity/Product';\nimport cors from 'cors';\nconst app = express();\napp.use(express.json());\napp.use(cors());\n\n// Veritabanını başlat\nAppDataSource.initialize().then(() => {\n  console.log('Veritabanına başarıyla bağlanıldı.');\n}).catch(error => console.log('Veritabanı bağlantı hatası:', error));\n\n// API rotaları\nconst router = express.Router();\n\n// Ürün ekleme (CREATE)\nrouter.post('/product', async (req, res) => {\n  try {\n    const productRepository = AppDataSource.getRepository(Product);\n    const newProduct = productRepository.create(req.body);\n    await productRepository.save(newProduct);\n    res.status(201).json(newProduct);\n  } catch (error) {\n    res.status(500).json({\n      message: 'Ürün eklenirken bir hata oluştu',\n      error\n    });\n  }\n});\n\n// Tüm ürünleri listeleme (READ)\nrouter.get('/product', async (req, res) => {\n  try {\n    const productRepository = AppDataSource.getRepository(Product);\n    const products = await productRepository.find();\n    res.json(products);\n  } catch (error) {\n    res.status(500).json({\n      message: 'Ürünler listelenirken bir hata oluştu',\n      error\n    });\n  }\n});\n\n// Belirli bir ürünü listeleme (READ)\nrouter.get('/product/:id', async (req, res) => {\n  try {\n    const productRepository = AppDataSource.getRepository(Product);\n    const product = await productRepository.findOneBy({\n      id: parseInt(req.params.id)\n    });\n    if (product) {\n      res.json(product);\n    } else {\n      res.status(404).json({\n        message: 'Ürün bulunamadı'\n      });\n    }\n  } catch (error) {\n    res.status(500).json({\n      message: 'Ürün getirilirken bir hata oluştu',\n      error\n    });\n  }\n});\n\n// Ürün güncelleme (UPDATE)\nrouter.put('/product/:id', async (req, res) => {\n  try {\n    const productRepository = AppDataSource.getRepository(Product);\n    const result = await productRepository.update(req.params.id, req.body);\n    if (result.affected > 0) {\n      const updatedProduct = await productRepository.findOneBy({\n        id: parseInt(req.params.id)\n      });\n      res.json(updatedProduct);\n    } else {\n      res.status(404).json({\n        message: 'Ürün güncellenemedi'\n      });\n    }\n  } catch (error) {\n    res.status(500).json({\n      message: 'Ürün güncellenirken bir hata oluştu',\n      error\n    });\n  }\n});\n\n// Ürün silme (DELETE)\nrouter.delete('/product/:id', async (req, res) => {\n  try {\n    const productRepository = AppDataSource.getRepository(Product);\n    const deleteResult = await productRepository.delete(req.params.id);\n    if (deleteResult.affected) {\n      res.json({\n        message: 'Ürün başarıyla silindi'\n      });\n    } else {\n      res.status(404).json({\n        message: 'Ürün bulunamadı'\n      });\n    }\n  } catch (error) {\n    res.status(500).json({\n      message: 'Ürün silinirken bir hata oluştu',\n      error\n    });\n  }\n});\n\n// API rotalarını uygula\napp.use('/api', router);\n\n// Sunucuyu başlat\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Sunucu ${PORT} portunda çalışıyor.`);\n});","map":{"version":3,"names":["express","AppDataSource","Product","cors","app","use","json","initialize","then","console","log","catch","error","router","Router","post","req","res","productRepository","getRepository","newProduct","create","body","save","status","message","get","products","find","product","findOneBy","id","parseInt","params","put","result","update","affected","updatedProduct","delete","deleteResult","PORT","process","env","listen"],"sources":["D:/Ronwell Task 1/src/index.ts"],"sourcesContent":["import express, { Request, Response } from 'express';\r\nimport { AppDataSource } from './data_source';\r\nimport { Product } from './entity/Product';\r\nimport cors from 'cors';\r\n\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\n// Veritabanını başlat\r\nAppDataSource.initialize()\r\n  .then(() => {\r\n    console.log('Veritabanına başarıyla bağlanıldı.');\r\n  })\r\n  .catch((error) => console.log('Veritabanı bağlantı hatası:', error));\r\n\r\n// API rotaları\r\nconst router = express.Router();\r\n\r\n// Ürün ekleme (CREATE)\r\nrouter.post('/product', async (req: Request, res: Response) => {\r\n  try {\r\n    const productRepository = AppDataSource.getRepository(Product);\r\n    const newProduct = productRepository.create(req.body);\r\n    await productRepository.save(newProduct);\r\n    res.status(201).json(newProduct);\r\n  } catch (error) {\r\n    res.status(500).json({ message: 'Ürün eklenirken bir hata oluştu', error });\r\n  }\r\n});\r\n\r\n// Tüm ürünleri listeleme (READ)\r\nrouter.get('/product', async (req: Request, res: Response) => {\r\n  try {\r\n    const productRepository = AppDataSource.getRepository(Product);\r\n    const products = await productRepository.find();\r\n    res.json(products);\r\n  } catch (error) {\r\n    res.status(500).json({ message: 'Ürünler listelenirken bir hata oluştu', error });\r\n  }\r\n});\r\n\r\n// Belirli bir ürünü listeleme (READ)\r\nrouter.get('/product/:id', async (req: Request, res: Response) => {\r\n  try {\r\n    const productRepository = AppDataSource.getRepository(Product);\r\n    const product = await productRepository.findOneBy({ id: parseInt(req.params.id) });\r\n    if (product) {\r\n      res.json(product);\r\n    } else {\r\n      res.status(404).json({ message: 'Ürün bulunamadı' });\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: 'Ürün getirilirken bir hata oluştu', error });\r\n  }\r\n});\r\n\r\n// Ürün güncelleme (UPDATE)\r\nrouter.put('/product/:id', async (req: Request, res: Response) => {\r\n  try {\r\n    const productRepository = AppDataSource.getRepository(Product);\r\n    const result = await productRepository.update(req.params.id, req.body);\r\n    if (result.affected > 0) {\r\n      const updatedProduct = await productRepository.findOneBy({ id: parseInt(req.params.id) });\r\n      res.json(updatedProduct);\r\n    } else {\r\n      res.status(404).json({ message: 'Ürün güncellenemedi' });\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: 'Ürün güncellenirken bir hata oluştu', error });\r\n  }\r\n});\r\n\r\n// Ürün silme (DELETE)\r\nrouter.delete('/product/:id', async (req: Request, res: Response) => {\r\n  try {\r\n    const productRepository = AppDataSource.getRepository(Product);\r\n    const deleteResult = await productRepository.delete(req.params.id);\r\n    if (deleteResult.affected) {\r\n      res.json({ message: 'Ürün başarıyla silindi' });\r\n    } else {\r\n      res.status(404).json({ message: 'Ürün bulunamadı' });\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: 'Ürün silinirken bir hata oluştu', error });\r\n  }\r\n});\r\n\r\n// API rotalarını uygula\r\napp.use('/api', router);\r\n\r\n// Sunucuyu başlat\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Sunucu ${PORT} portunda çalışıyor.`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}