{"ast":null,"code":"import express from 'express';\nimport bodyParser from 'body-parser';\nconst app = express();\nconst port = 3000;\n\n// Body parser middleware\napp.use(bodyParser.json());\n\n// MongoDB bağlantısı\nmongoose.connect('mongodb://localhost:27017/productsdb', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('MongoDB connected')).catch(err => console.log('MongoDB connection error:', err));\n\n// Product model (Mongoose schema)\nconst productSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  price: {\n    type: Number,\n    required: true\n  },\n  description: {\n    type: String\n  }\n});\nconst Product = mongoose.model('Product', productSchema);\n\n// CRUD işlemleri\n\n// Create (Yeni ürün ekle)\napp.post('/products', async (req, res) => {\n  const {\n    name,\n    price,\n    description\n  } = req.body;\n  try {\n    const newProduct = new Product({\n      name,\n      price,\n      description\n    });\n    await newProduct.save();\n    res.status(201).json(newProduct);\n  } catch (err) {\n    res.status(400).json({\n      message: 'Error creating product',\n      error: err\n    });\n  }\n});\n\n// Read (Ürünleri listele)\napp.get('/products', async (req, res) => {\n  try {\n    const products = await Product.find();\n    res.status(200).json(products);\n  } catch (err) {\n    res.status(400).json({\n      message: 'Error fetching products',\n      error: err\n    });\n  }\n});\n\n// Read (Tek bir ürünü göster)\napp.get('/products/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  try {\n    const product = await Product.findById(id);\n    if (product) {\n      res.status(200).json(product);\n    } else {\n      res.status(404).json({\n        message: 'Product not found'\n      });\n    }\n  } catch (err) {\n    res.status(400).json({\n      message: 'Error fetching product',\n      error: err\n    });\n  }\n});\n\n// Update (Ürün güncelle)\napp.put('/products/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    name,\n    price,\n    description\n  } = req.body;\n  try {\n    const updatedProduct = await Product.findByIdAndUpdate(id, {\n      name,\n      price,\n      description\n    }, {\n      new: true\n    });\n    if (updatedProduct) {\n      res.status(200).json(updatedProduct);\n    } else {\n      res.status(404).json({\n        message: 'Product not found'\n      });\n    }\n  } catch (err) {\n    res.status(400).json({\n      message: 'Error updating product',\n      error: err\n    });\n  }\n});\n\n// Delete (Ürün sil)\napp.delete('/products/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  try {\n    const deletedProduct = await Product.findByIdAndDelete(id);\n    if (deletedProduct) {\n      res.status(200).json({\n        message: 'Product deleted'\n      });\n    } else {\n      res.status(404).json({\n        message: 'Product not found'\n      });\n    }\n  } catch (err) {\n    res.status(400).json({\n      message: 'Error deleting product',\n      error: err\n    });\n  }\n});\n\n// Sunucuyu başlat\napp.listen(port, () => {\n  console.log(`Server is running at http://localhost:${port}`);\n});","map":{"version":3,"names":["express","bodyParser","app","port","use","json","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","productSchema","Schema","name","type","String","required","price","Number","description","Product","model","post","req","res","body","newProduct","save","status","message","error","get","products","find","id","params","product","findById","put","updatedProduct","findByIdAndUpdate","new","delete","deletedProduct","findByIdAndDelete","listen"],"sources":["D:/Ronwell Task 1/src/index.ts"],"sourcesContent":["import express, { Request, Response } from 'express';\r\n\r\nimport bodyParser from 'body-parser';\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// Body parser middleware\r\napp.use(bodyParser.json());\r\n\r\n// MongoDB bağlantısı\r\nmongoose.connect('mongodb://localhost:27017/productsdb', {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n})\r\n  .then(() => console.log('MongoDB connected'))\r\n  .catch((err) => console.log('MongoDB connection error:', err));\r\n\r\n// Product model (Mongoose schema)\r\nconst productSchema = new mongoose.Schema({\r\n  name: { type: String, required: true },\r\n  price: { type: Number, required: true },\r\n  description: { type: String },\r\n});\r\n\r\nconst Product = mongoose.model('Product', productSchema);\r\n\r\n// CRUD işlemleri\r\n\r\n// Create (Yeni ürün ekle)\r\napp.post('/products', async (req: Request, res: Response) => {\r\n  const { name, price, description } = req.body;\r\n\r\n  try {\r\n    const newProduct = new Product({ name, price, description });\r\n    await newProduct.save();\r\n    res.status(201).json(newProduct);\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'Error creating product', error: err });\r\n  }\r\n});\r\n\r\n// Read (Ürünleri listele)\r\napp.get('/products', async (req: Request, res: Response) => {\r\n  try {\r\n    const products = await Product.find();\r\n    res.status(200).json(products);\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'Error fetching products', error: err });\r\n  }\r\n});\r\n\r\n// Read (Tek bir ürünü göster)\r\napp.get('/products/:id', async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const product = await Product.findById(id);\r\n    if (product) {\r\n      res.status(200).json(product);\r\n    } else {\r\n      res.status(404).json({ message: 'Product not found' });\r\n    }\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'Error fetching product', error: err });\r\n  }\r\n});\r\n\r\n// Update (Ürün güncelle)\r\napp.put('/products/:id', async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const { name, price, description } = req.body;\r\n\r\n  try {\r\n    const updatedProduct = await Product.findByIdAndUpdate(id, { name, price, description }, { new: true });\r\n    if (updatedProduct) {\r\n      res.status(200).json(updatedProduct);\r\n    } else {\r\n      res.status(404).json({ message: 'Product not found' });\r\n    }\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'Error updating product', error: err });\r\n  }\r\n});\r\n\r\n// Delete (Ürün sil)\r\napp.delete('/products/:id', async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const deletedProduct = await Product.findByIdAndDelete(id);\r\n    if (deletedProduct) {\r\n      res.status(200).json({ message: 'Product deleted' });\r\n    } else {\r\n      res.status(404).json({ message: 'Product not found' });\r\n    }\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'Error deleting product', error: err });\r\n  }\r\n});\r\n\r\n// Sunucuyu başlat\r\napp.listen(port, () => {\r\n  console.log(`Server is running at http://localhost:${port}`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}