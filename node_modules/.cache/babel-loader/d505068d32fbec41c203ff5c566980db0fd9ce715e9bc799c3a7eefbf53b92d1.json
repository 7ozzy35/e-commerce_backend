{"ast":null,"code":"import express from 'express';\nimport { AppDataSource } from './data_source';\nimport { Product } from './entity/Product';\nconst app = express();\napp.use(express.json());\n\n// Veritabanını başlat\nAppDataSource.initialize().then(() => {\n  console.log('Veritabanına başarıyla bağlanıldı.');\n}).catch(error => console.log('Veritabanı bağlantı hatası:', error));\n\n// Tüm ürünleri listeleme (READ)\napp.get('/product', async (req, res) => {\n  const productRepository = AppDataSource.getRepository(Product);\n  const products = await productRepository.find();\n  res.json(products);\n});\n\n// Belirli bir ürünü listeleme (READ)\napp.get('/product/:id', async (req, res) => {\n  const productRepository = AppDataSource.getRepository(Product);\n  const product = await productRepository.findOneBy({\n    id: parseInt(req.params.id)\n  });\n  if (product) {\n    res.json(product);\n  } else {\n    res.status(404).json({\n      message: 'Ürün bulunamadı'\n    });\n  }\n});\n\n// Ürün güncelleme (UPDATE)\napp.put('http://localhost:3000//product/:id', async (req, res) => {\n  const productRepository = AppDataSource.getRepository(Product);\n  await productRepository.update(req.params.id, req.body);\n  const updatedProduct = await productRepository.findOneBy({\n    id: parseInt(req.params.id)\n  });\n  if (updatedProduct) {\n    res.json(updatedProduct);\n  } else {\n    res.status(404).json({\n      message: 'Ürün güncellenemedi'\n    });\n  }\n});\n\n// Ürün silme (DELETE)\napp.delete('http://localhost:3000//product/:id', async (req, res) => {\n  const productRepository = AppDataSource.getRepository(Product);\n  const deleteResult = await productRepository.delete(req.params.id);\n  if (deleteResult.affected) {\n    res.json({\n      message: 'Ürün silindi'\n    });\n  } else {\n    res.status(404).json({\n      message: 'Ürün bulunamadı'\n    });\n  }\n});\n\n// Sunucuyu başlat\nconst PORT = 3000;\napp.listen(PORT, () => {\n  console.log(`Sunucu ${PORT} portunda çalışıyor.`);\n});","map":{"version":3,"names":["express","AppDataSource","Product","app","use","json","initialize","then","console","log","catch","error","get","req","res","productRepository","getRepository","products","find","product","findOneBy","id","parseInt","params","status","message","put","update","body","updatedProduct","delete","deleteResult","affected","PORT","listen"],"sources":["D:/Ronwell Task 1/src/index.ts"],"sourcesContent":["import express, { Request, Response } from 'express';\r\nimport { AppDataSource } from './data_source';\r\nimport { Product } from './entity/Product';\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\n// Veritabanını başlat\r\nAppDataSource.initialize()\r\n  .then(() => {\r\n    console.log('Veritabanına başarıyla bağlanıldı.');\r\n  })\r\n  .catch((error) => console.log('Veritabanı bağlantı hatası:', error));\r\n\r\n// Tüm ürünleri listeleme (READ)\r\napp.get('/product', async (req: Request, res: Response) => {\r\n  const productRepository = AppDataSource.getRepository(Product);\r\n  const products = await productRepository.find();\r\n  res.json(products);\r\n});\r\n\r\n// Belirli bir ürünü listeleme (READ)\r\napp.get('/product/:id', async (req: Request, res: Response) => {\r\n  const productRepository = AppDataSource.getRepository(Product);\r\n  const product = await productRepository.findOneBy({ id: parseInt(req.params.id) });\r\n  if (product) {\r\n    res.json(product);\r\n  } else {\r\n    res.status(404).json({ message: 'Ürün bulunamadı' });\r\n  }\r\n});\r\n\r\n// Ürün güncelleme (UPDATE)\r\napp.put('http://localhost:3000//product/:id', async (req: Request, res: Response) => {\r\n  const productRepository = AppDataSource.getRepository(Product);\r\n  await productRepository.update(req.params.id, req.body);\r\n  const updatedProduct = await productRepository.findOneBy({ id: parseInt(req.params.id) });\r\n  if (updatedProduct) {\r\n    res.json(updatedProduct);\r\n  } else {\r\n    res.status(404).json({ message: 'Ürün güncellenemedi' });\r\n  }\r\n});\r\n\r\n// Ürün silme (DELETE)\r\napp.delete('http://localhost:3000//product/:id', async (req: Request, res: Response) => {\r\n  const productRepository = AppDataSource.getRepository(Product);\r\n  const deleteResult = await productRepository.delete(req.params.id);\r\n  if (deleteResult.affected) {\r\n    res.json({ message: 'Ürün silindi' });\r\n  } else {\r\n    res.status(404).json({ message: 'Ürün bulunamadı' });\r\n  }\r\n});\r\n\r\n// Sunucuyu başlat\r\nconst PORT = 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Sunucu ${PORT} portunda çalışıyor.`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}