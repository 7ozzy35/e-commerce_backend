{"ast":null,"code":"/**\n * Database's table exclusion constraint stored in this class.\n */\nexport class TableExclusion {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  constructor(options) {\n    this[\"@instanceof\"] = Symbol.for(\"TableExclusion\");\n    this.name = options.name;\n    this.expression = options.expression;\n  }\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates a new copy of this constraint with exactly same properties.\n   */\n  clone() {\n    return new TableExclusion({\n      name: this.name,\n      expression: this.expression\n    });\n  }\n  // -------------------------------------------------------------------------\n  // Static Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates exclusions from the exclusion metadata object.\n   */\n  static create(exclusionMetadata) {\n    return new TableExclusion({\n      name: exclusionMetadata.name,\n      expression: exclusionMetadata.expression\n    });\n  }\n}","map":{"version":3,"names":["TableExclusion","constructor","options","Symbol","for","name","expression","clone","create","exclusionMetadata"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\schema-builder\\table\\TableExclusion.ts"],"sourcesContent":["import { TableExclusionOptions } from \"../options/TableExclusionOptions\"\nimport { ExclusionMetadata } from \"../../metadata/ExclusionMetadata\"\n\n/**\n * Database's table exclusion constraint stored in this class.\n */\nexport class TableExclusion {\n    readonly \"@instanceof\" = Symbol.for(\"TableExclusion\")\n\n    // -------------------------------------------------------------------------\n    // Public Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Constraint name.\n     */\n    name?: string\n\n    /**\n     * Exclusion expression.\n     */\n    expression?: string\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(options: TableExclusionOptions) {\n        this.name = options.name\n        this.expression = options.expression\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    clone(): TableExclusion {\n        return new TableExclusion(<TableExclusionOptions>{\n            name: this.name,\n            expression: this.expression,\n        })\n    }\n\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates exclusions from the exclusion metadata object.\n     */\n    static create(exclusionMetadata: ExclusionMetadata): TableExclusion {\n        return new TableExclusion(<TableExclusionOptions>{\n            name: exclusionMetadata.name,\n            expression: exclusionMetadata.expression,\n        })\n    }\n}\n"],"mappings":"AAGA;;;AAGA,OAAM,MAAOA,cAAc;EAiBvB;EACA;EACA;EAEAC,YAAYC,OAA8B;IApBjC,mBAAa,GAAGC,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAqBjD,IAAI,CAACC,IAAI,GAAGH,OAAO,CAACG,IAAI;IACxB,IAAI,CAACC,UAAU,GAAGJ,OAAO,CAACI,UAAU;EACxC;EAEA;EACA;EACA;EAEA;;;EAGAC,KAAKA,CAAA;IACD,OAAO,IAAIP,cAAc,CAAwB;MAC7CK,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,UAAU,EAAE,IAAI,CAACA;KACpB,CAAC;EACN;EAEA;EACA;EACA;EAEA;;;EAGA,OAAOE,MAAMA,CAACC,iBAAoC;IAC9C,OAAO,IAAIT,cAAc,CAAwB;MAC7CK,IAAI,EAAEI,iBAAiB,CAACJ,IAAI;MAC5BC,UAAU,EAAEG,iBAAiB,CAACH;KACjC,CAAC;EACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}