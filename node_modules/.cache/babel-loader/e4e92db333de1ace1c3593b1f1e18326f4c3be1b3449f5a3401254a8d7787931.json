{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppDataSource = void 0;\nrequire(\"reflect-metadata\");\nvar typeorm_1 = require(\"typeorm\");\nvar Product_1 = require(\"./entity/Product\");\nexports.AppDataSource = new typeorm_1.DataSource({\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'postgres',\n  password: '1234',\n  database: 'dbproduct',\n  synchronize: true,\n  // true ise schema otomatik olarak senkronize edilir\n  logging: true,\n  entities: [Product_1.Product],\n  // Kullanmak istediğiniz Entity'leri ekleyin\n  migrations: [],\n  subscribers: []\n});\n// Veritabanı bağlantısını başlat\nexports.AppDataSource.initialize().then(function () {\n  console.log('Veritabanına başarıyla bağlanıldı ve şema oluşturuldu.');\n}).catch(function (error) {\n  return console.log('Veritabanı bağlantı hatası:', error);\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","AppDataSource","require","typeorm_1","Product_1","DataSource","type","host","port","username","password","database","synchronize","logging","entities","Product","migrations","subscribers","initialize","then","console","log","catch","error"],"sources":["D:/Ronwell Task 1/src/data_source.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppDataSource = void 0;\nrequire(\"reflect-metadata\");\nvar typeorm_1 = require(\"typeorm\");\nvar Product_1 = require(\"./entity/Product\");\nexports.AppDataSource = new typeorm_1.DataSource({\n    type: 'postgres',\n    host: 'localhost',\n    port: 5432,\n    username: 'postgres',\n    password: '1234',\n    database: 'dbproduct',\n    synchronize: true, // true ise schema otomatik olarak senkronize edilir\n    logging: true,\n    entities: [Product_1.Product], // Kullanmak istediğiniz Entity'leri ekleyin\n    migrations: [],\n    subscribers: [],\n});\n// Veritabanı bağlantısını başlat\nexports.AppDataSource.initialize()\n    .then(function () {\n    console.log('Veritabanına başarıyla bağlanıldı ve şema oluşturuldu.');\n})\n    .catch(function (error) { return console.log('Veritabanı bağlantı hatası:', error); });\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9BC,OAAO,CAAC,kBAAkB,CAAC;AAC3B,IAAIC,SAAS,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,IAAIE,SAAS,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC3CH,OAAO,CAACE,aAAa,GAAG,IAAIE,SAAS,CAACE,UAAU,CAAC;EAC7CC,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,IAAI;EAAE;EACnBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,CAACV,SAAS,CAACW,OAAO,CAAC;EAAE;EAC/BC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE;AACjB,CAAC,CAAC;AACF;AACAlB,OAAO,CAACE,aAAa,CAACiB,UAAU,CAAC,CAAC,CAC7BC,IAAI,CAAC,YAAY;EAClBC,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;AACzE,CAAC,CAAC,CACGC,KAAK,CAAC,UAAUC,KAAK,EAAE;EAAE,OAAOH,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEE,KAAK,CAAC;AAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}