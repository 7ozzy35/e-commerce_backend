{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n */\nexport class FindRelationsNotFoundError extends TypeORMError {\n  constructor(notFoundRelations) {\n    super();\n    if (notFoundRelations.length === 1) {\n      this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`;\n    } else {\n      this.message = `Relations ${notFoundRelations.map(relation => `\"${relation}\"`).join(\", \")} were not found; please check if relations are correct and they exist in your entities.`;\n    }\n  }\n}","map":{"version":3,"names":["TypeORMError","FindRelationsNotFoundError","constructor","notFoundRelations","length","message","map","relation","join"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\error\\FindRelationsNotFoundError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n */\nexport class FindRelationsNotFoundError extends TypeORMError {\n    constructor(notFoundRelations: string[]) {\n        super()\n\n        if (notFoundRelations.length === 1) {\n            this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`\n        } else {\n            this.message = `Relations ${notFoundRelations\n                .map((relation) => `\"${relation}\"`)\n                .join(\n                    \", \",\n                )} were not found; please check if relations are correct and they exist in your entities.`\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C;;;AAGA,OAAM,MAAOC,0BAA2B,SAAQD,YAAY;EACxDE,YAAYC,iBAA2B;IACnC,KAAK,EAAE;IAEP,IAAIA,iBAAiB,CAACC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACC,OAAO,GAAG,aAAaF,iBAAiB,CAAC,CAAC,CAAC,kFAAkF;IACtI,CAAC,MAAM;MACH,IAAI,CAACE,OAAO,GAAG,aAAaF,iBAAiB,CACxCG,GAAG,CAAEC,QAAQ,IAAK,IAAIA,QAAQ,GAAG,CAAC,CAClCC,IAAI,CACD,IAAI,CACP,yFAAyF;IAClG;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}