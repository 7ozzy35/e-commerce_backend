{"ast":null,"code":"import { SimpleConsoleLogger } from \"./SimpleConsoleLogger\";\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\";\nimport { FileLogger } from \"./FileLogger\";\nimport { DebugLogger } from \"./DebugLogger\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Helps to create logger instances.\n */\nexport class LoggerFactory {\n  /**\n   * Creates a new logger depend on a given connection's driver.\n   */\n  create(logger, options) {\n    if (ObjectUtils.isObject(logger)) return logger;\n    if (logger) {\n      switch (logger) {\n        case \"simple-console\":\n          return new SimpleConsoleLogger(options);\n        case \"file\":\n          return new FileLogger(options);\n        case \"advanced-console\":\n          return new AdvancedConsoleLogger(options);\n        case \"debug\":\n          return new DebugLogger();\n      }\n    }\n    return new AdvancedConsoleLogger(options);\n  }\n}","map":{"version":3,"names":["SimpleConsoleLogger","AdvancedConsoleLogger","FileLogger","DebugLogger","ObjectUtils","LoggerFactory","create","logger","options","isObject"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\logger\\LoggerFactory.ts"],"sourcesContent":["import { Logger } from \"./Logger\"\nimport { LoggerOptions } from \"./LoggerOptions\"\nimport { SimpleConsoleLogger } from \"./SimpleConsoleLogger\"\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\"\nimport { FileLogger } from \"./FileLogger\"\nimport { DebugLogger } from \"./DebugLogger\"\nimport { ObjectUtils } from \"../util/ObjectUtils\"\n\n/**\n * Helps to create logger instances.\n */\nexport class LoggerFactory {\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    create(\n        logger?:\n            | \"advanced-console\"\n            | \"simple-console\"\n            | \"file\"\n            | \"debug\"\n            | Logger,\n        options?: LoggerOptions,\n    ): Logger {\n        if (ObjectUtils.isObject(logger)) return logger as Logger\n\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger(options)\n\n                case \"file\":\n                    return new FileLogger(options)\n\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger(options)\n\n                case \"debug\":\n                    return new DebugLogger()\n            }\n        }\n\n        return new AdvancedConsoleLogger(options)\n    }\n}\n"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,qBAAqB;AAEjD;;;AAGA,OAAM,MAAOC,aAAa;EACtB;;;EAGAC,MAAMA,CACFC,MAKY,EACZC,OAAuB;IAEvB,IAAIJ,WAAW,CAACK,QAAQ,CAACF,MAAM,CAAC,EAAE,OAAOA,MAAgB;IAEzD,IAAIA,MAAM,EAAE;MACR,QAAQA,MAAM;QACV,KAAK,gBAAgB;UACjB,OAAO,IAAIP,mBAAmB,CAACQ,OAAO,CAAC;QAE3C,KAAK,MAAM;UACP,OAAO,IAAIN,UAAU,CAACM,OAAO,CAAC;QAElC,KAAK,kBAAkB;UACnB,OAAO,IAAIP,qBAAqB,CAACO,OAAO,CAAC;QAE7C,KAAK,OAAO;UACR,OAAO,IAAIL,WAAW,EAAE;MAChC;IACJ;IAEA,OAAO,IAAIF,qBAAqB,CAACO,OAAO,CAAC;EAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}