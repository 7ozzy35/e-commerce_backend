{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../globals\";\nimport { ObjectUtils } from \"../../util/ObjectUtils\";\n/**\n * This decorator is used to mark classes that will be an entity view.\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n */\nexport function ViewEntity(nameOrOptions, maybeOptions) {\n  const options = (ObjectUtils.isObject(nameOrOptions) ? nameOrOptions : maybeOptions) || {};\n  const name = typeof nameOrOptions === \"string\" ? nameOrOptions : options.name;\n  return function (target) {\n    getMetadataArgsStorage().tables.push({\n      target: target,\n      name: name,\n      expression: options.expression,\n      dependsOn: options.dependsOn ? new Set(options.dependsOn) : undefined,\n      type: \"view\",\n      database: options.database ? options.database : undefined,\n      schema: options.schema ? options.schema : undefined,\n      synchronize: options.synchronize === false ? false : true,\n      materialized: !!options.materialized\n    });\n  };\n}","map":{"version":3,"names":["getMetadataArgsStorage","ObjectUtils","ViewEntity","nameOrOptions","maybeOptions","options","isObject","name","target","tables","push","expression","dependsOn","Set","undefined","type","database","schema","synchronize","materialized"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\decorator\\entity-view\\ViewEntity.ts"],"sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\nimport { TableMetadataArgs } from \"../../metadata-args/TableMetadataArgs\"\nimport { ViewEntityOptions } from \"../options/ViewEntityOptions\"\nimport { ObjectUtils } from \"../../util/ObjectUtils\"\n\n/**\n * This decorator is used to mark classes that will be an entity view.\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n */\nexport function ViewEntity(options?: ViewEntityOptions): ClassDecorator\n\n/**\n * This decorator is used to mark classes that will be an entity view.\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n */\nexport function ViewEntity(\n    name?: string,\n    options?: ViewEntityOptions,\n): ClassDecorator\n\n/**\n * This decorator is used to mark classes that will be an entity view.\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n */\nexport function ViewEntity(\n    nameOrOptions?: string | ViewEntityOptions,\n    maybeOptions?: ViewEntityOptions,\n): ClassDecorator {\n    const options =\n        (ObjectUtils.isObject(nameOrOptions)\n            ? (nameOrOptions as ViewEntityOptions)\n            : maybeOptions) || {}\n    const name =\n        typeof nameOrOptions === \"string\" ? nameOrOptions : options.name\n\n    return function (target: Function) {\n        getMetadataArgsStorage().tables.push({\n            target: target,\n            name: name,\n            expression: options.expression,\n            dependsOn: options.dependsOn\n                ? new Set(options.dependsOn)\n                : undefined,\n            type: \"view\",\n            database: options.database ? options.database : undefined,\n            schema: options.schema ? options.schema : undefined,\n            synchronize: options.synchronize === false ? false : true,\n            materialized: !!options.materialized,\n        } as TableMetadataArgs)\n    }\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,eAAe;AAGtD,SAASC,WAAW,QAAQ,wBAAwB;AAiBpD;;;;AAIA,OAAM,SAAUC,UAAUA,CACtBC,aAA0C,EAC1CC,YAAgC;EAEhC,MAAMC,OAAO,GACT,CAACJ,WAAW,CAACK,QAAQ,CAACH,aAAa,CAAC,GAC7BA,aAAmC,GACpCC,YAAY,KAAK,EAAE;EAC7B,MAAMG,IAAI,GACN,OAAOJ,aAAa,KAAK,QAAQ,GAAGA,aAAa,GAAGE,OAAO,CAACE,IAAI;EAEpE,OAAO,UAAUC,MAAgB;IAC7BR,sBAAsB,EAAE,CAACS,MAAM,CAACC,IAAI,CAAC;MACjCF,MAAM,EAAEA,MAAM;MACdD,IAAI,EAAEA,IAAI;MACVI,UAAU,EAAEN,OAAO,CAACM,UAAU;MAC9BC,SAAS,EAAEP,OAAO,CAACO,SAAS,GACtB,IAAIC,GAAG,CAACR,OAAO,CAACO,SAAS,CAAC,GAC1BE,SAAS;MACfC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAEX,OAAO,CAACW,QAAQ,GAAGX,OAAO,CAACW,QAAQ,GAAGF,SAAS;MACzDG,MAAM,EAAEZ,OAAO,CAACY,MAAM,GAAGZ,OAAO,CAACY,MAAM,GAAGH,SAAS;MACnDI,WAAW,EAAEb,OAAO,CAACa,WAAW,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI;MACzDC,YAAY,EAAE,CAAC,CAACd,OAAO,CAACc;KACN,CAAC;EAC3B,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}