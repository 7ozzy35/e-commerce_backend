{"ast":null,"code":"export class TableUtils {\n  static createTableColumnOptions(columnMetadata, driver) {\n    return {\n      name: columnMetadata.databaseName,\n      length: driver.getColumnLength(columnMetadata),\n      width: columnMetadata.width,\n      charset: columnMetadata.charset,\n      collation: columnMetadata.collation,\n      precision: columnMetadata.precision,\n      scale: columnMetadata.scale,\n      zerofill: columnMetadata.zerofill,\n      unsigned: columnMetadata.unsigned,\n      asExpression: columnMetadata.asExpression,\n      generatedType: columnMetadata.generatedType,\n      default: driver.normalizeDefault(columnMetadata),\n      onUpdate: columnMetadata.onUpdate,\n      comment: columnMetadata.comment,\n      isGenerated: columnMetadata.isGenerated,\n      generationStrategy: columnMetadata.generationStrategy,\n      generatedIdentity: columnMetadata.generatedIdentity,\n      isNullable: columnMetadata.isNullable,\n      type: driver.normalizeType(columnMetadata),\n      isPrimary: columnMetadata.isPrimary,\n      isUnique: driver.normalizeIsUnique(columnMetadata),\n      isArray: columnMetadata.isArray || false,\n      enum: columnMetadata.enum ? columnMetadata.enum.map(val => val + \"\") : columnMetadata.enum,\n      enumName: columnMetadata.enumName,\n      primaryKeyConstraintName: columnMetadata.primaryKeyConstraintName,\n      spatialFeatureType: columnMetadata.spatialFeatureType,\n      srid: columnMetadata.srid\n    };\n  }\n}","map":{"version":3,"names":["TableUtils","createTableColumnOptions","columnMetadata","driver","name","databaseName","length","getColumnLength","width","charset","collation","precision","scale","zerofill","unsigned","asExpression","generatedType","default","normalizeDefault","onUpdate","comment","isGenerated","generationStrategy","generatedIdentity","isNullable","type","normalizeType","isPrimary","isUnique","normalizeIsUnique","isArray","enum","map","val","enumName","primaryKeyConstraintName","spatialFeatureType","srid"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\schema-builder\\util\\TableUtils.ts"],"sourcesContent":["import { TableColumnOptions } from \"../options/TableColumnOptions\"\nimport { ColumnMetadata } from \"../../metadata/ColumnMetadata\"\nimport { Driver } from \"../../driver/Driver\"\n\nexport class TableUtils {\n    static createTableColumnOptions(\n        columnMetadata: ColumnMetadata,\n        driver: Driver,\n    ): TableColumnOptions {\n        return {\n            name: columnMetadata.databaseName,\n            length: driver.getColumnLength(columnMetadata),\n            width: columnMetadata.width,\n            charset: columnMetadata.charset,\n            collation: columnMetadata.collation,\n            precision: columnMetadata.precision,\n            scale: columnMetadata.scale,\n            zerofill: columnMetadata.zerofill,\n            unsigned: columnMetadata.unsigned,\n            asExpression: columnMetadata.asExpression,\n            generatedType: columnMetadata.generatedType,\n            default: driver.normalizeDefault(columnMetadata),\n            onUpdate: columnMetadata.onUpdate,\n            comment: columnMetadata.comment,\n            isGenerated: columnMetadata.isGenerated,\n            generationStrategy: columnMetadata.generationStrategy,\n            generatedIdentity: columnMetadata.generatedIdentity,\n            isNullable: columnMetadata.isNullable,\n            type: driver.normalizeType(columnMetadata),\n            isPrimary: columnMetadata.isPrimary,\n            isUnique: driver.normalizeIsUnique(columnMetadata),\n            isArray: columnMetadata.isArray || false,\n            enum: columnMetadata.enum\n                ? columnMetadata.enum.map((val) => val + \"\")\n                : columnMetadata.enum,\n            enumName: columnMetadata.enumName,\n            primaryKeyConstraintName: columnMetadata.primaryKeyConstraintName,\n            spatialFeatureType: columnMetadata.spatialFeatureType,\n            srid: columnMetadata.srid,\n        }\n    }\n}\n"],"mappings":"AAIA,OAAM,MAAOA,UAAU;EACnB,OAAOC,wBAAwBA,CAC3BC,cAA8B,EAC9BC,MAAc;IAEd,OAAO;MACHC,IAAI,EAAEF,cAAc,CAACG,YAAY;MACjCC,MAAM,EAAEH,MAAM,CAACI,eAAe,CAACL,cAAc,CAAC;MAC9CM,KAAK,EAAEN,cAAc,CAACM,KAAK;MAC3BC,OAAO,EAAEP,cAAc,CAACO,OAAO;MAC/BC,SAAS,EAAER,cAAc,CAACQ,SAAS;MACnCC,SAAS,EAAET,cAAc,CAACS,SAAS;MACnCC,KAAK,EAAEV,cAAc,CAACU,KAAK;MAC3BC,QAAQ,EAAEX,cAAc,CAACW,QAAQ;MACjCC,QAAQ,EAAEZ,cAAc,CAACY,QAAQ;MACjCC,YAAY,EAAEb,cAAc,CAACa,YAAY;MACzCC,aAAa,EAAEd,cAAc,CAACc,aAAa;MAC3CC,OAAO,EAAEd,MAAM,CAACe,gBAAgB,CAAChB,cAAc,CAAC;MAChDiB,QAAQ,EAAEjB,cAAc,CAACiB,QAAQ;MACjCC,OAAO,EAAElB,cAAc,CAACkB,OAAO;MAC/BC,WAAW,EAAEnB,cAAc,CAACmB,WAAW;MACvCC,kBAAkB,EAAEpB,cAAc,CAACoB,kBAAkB;MACrDC,iBAAiB,EAAErB,cAAc,CAACqB,iBAAiB;MACnDC,UAAU,EAAEtB,cAAc,CAACsB,UAAU;MACrCC,IAAI,EAAEtB,MAAM,CAACuB,aAAa,CAACxB,cAAc,CAAC;MAC1CyB,SAAS,EAAEzB,cAAc,CAACyB,SAAS;MACnCC,QAAQ,EAAEzB,MAAM,CAAC0B,iBAAiB,CAAC3B,cAAc,CAAC;MAClD4B,OAAO,EAAE5B,cAAc,CAAC4B,OAAO,IAAI,KAAK;MACxCC,IAAI,EAAE7B,cAAc,CAAC6B,IAAI,GACnB7B,cAAc,CAAC6B,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,GAAG,EAAE,CAAC,GAC1C/B,cAAc,CAAC6B,IAAI;MACzBG,QAAQ,EAAEhC,cAAc,CAACgC,QAAQ;MACjCC,wBAAwB,EAAEjC,cAAc,CAACiC,wBAAwB;MACjEC,kBAAkB,EAAElC,cAAc,CAACkC,kBAAkB;MACrDC,IAAI,EAAEnC,cAAc,CAACmC;KACxB;EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}