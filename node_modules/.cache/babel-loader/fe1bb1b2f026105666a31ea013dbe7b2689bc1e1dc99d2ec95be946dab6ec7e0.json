{"ast":null,"code":"export class VersionUtils {\n  static isGreaterOrEqual(version, targetVersion) {\n    const v1 = parseVersion(version);\n    const v2 = parseVersion(targetVersion);\n    return v1[0] > v2[0] || v1[0] === v2[0] && v1[1] > v2[1] || v1[0] === v2[0] && v1[1] === v2[1] && v1[2] >= v2[2];\n  }\n}\nfunction parseVersion(version = \"\") {\n  const v = [0, 0, 0];\n  version.split(\".\").forEach((value, i) => v[i] = parseInt(value, 10));\n  return v;\n}","map":{"version":3,"names":["VersionUtils","isGreaterOrEqual","version","targetVersion","v1","parseVersion","v2","v","split","forEach","value","i","parseInt"],"sources":["D:\\Ronwell Task 1\\node_modules\\typeorm\\browser\\src\\util\\VersionUtils.ts"],"sourcesContent":["export type Version = [number, number, number]\n\nexport class VersionUtils {\n    static isGreaterOrEqual(version: string, targetVersion: string): boolean {\n        const v1 = parseVersion(version)\n        const v2 = parseVersion(targetVersion)\n\n        return (\n            v1[0] > v2[0] ||\n            (v1[0] === v2[0] && v1[1] > v2[1]) ||\n            (v1[0] === v2[0] && v1[1] === v2[1] && v1[2] >= v2[2])\n        )\n    }\n}\n\nfunction parseVersion(version: string = \"\"): Version {\n    const v: Version = [0, 0, 0]\n\n    version.split(\".\").forEach((value, i) => (v[i] = parseInt(value, 10)))\n\n    return v\n}\n"],"mappings":"AAEA,OAAM,MAAOA,YAAY;EACrB,OAAOC,gBAAgBA,CAACC,OAAe,EAAEC,aAAqB;IAC1D,MAAMC,EAAE,GAAGC,YAAY,CAACH,OAAO,CAAC;IAChC,MAAMI,EAAE,GAAGD,YAAY,CAACF,aAAa,CAAC;IAEtC,OACIC,EAAE,CAAC,CAAC,CAAC,GAAGE,EAAE,CAAC,CAAC,CAAC,IACZF,EAAE,CAAC,CAAC,CAAC,KAAKE,EAAE,CAAC,CAAC,CAAC,IAAIF,EAAE,CAAC,CAAC,CAAC,GAAGE,EAAE,CAAC,CAAC,CAAE,IACjCF,EAAE,CAAC,CAAC,CAAC,KAAKE,EAAE,CAAC,CAAC,CAAC,IAAIF,EAAE,CAAC,CAAC,CAAC,KAAKE,EAAE,CAAC,CAAC,CAAC,IAAIF,EAAE,CAAC,CAAC,CAAC,IAAIE,EAAE,CAAC,CAAC,CAAE;EAE9D;;AAGJ,SAASD,YAAYA,CAACH,OAAA,GAAkB,EAAE;EACtC,MAAMK,CAAC,GAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5BL,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAMJ,CAAC,CAACI,CAAC,CAAC,GAAGC,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAE,CAAC;EAEtE,OAAOH,CAAC;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}